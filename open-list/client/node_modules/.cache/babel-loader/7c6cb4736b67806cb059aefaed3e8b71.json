{"ast":null,"code":"import app from 'firebase';\nimport 'firebase/empty-import';\nimport 'firebase/empty-import';\nvar config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID\n};\n\nclass Firebase {\n  constructor() {\n    this.doCreateUserWithEmailAndPassword = (email, password) => this.auth.createUserWithEmailAndPassword(email, password);\n\n    this.doSignInWithEmailAndPassword = (email, password) => this.auth.signInWithEmailAndPassword(email, password);\n\n    this.doSignOut = () => this.auth.signOut();\n\n    this.doPasswordReset = email => this.auth.sendPasswordResetEmail(email).then(function () {// Email sent.\n    }).catch(function (error) {\n      // An error happened.\n      console.log(error);\n    });\n\n    this.doPasswordUpdate = password => this.auth.currentUser.updatePassword(password);\n\n    this.user = uid => this.db.ref(`users/${uid}`);\n\n    this.users = () => this.db.ref('users');\n\n    this.createNewList = uid => this.db.ref(`users/${uid}/openList`);\n\n    this.addToList = (uid, listKey) => this.db.ref(`users/${uid}/openList/${listKey}/regUser`);\n\n    app.initializeApp(config);\n    this.auth = app.auth();\n    this.db = app.database();\n  } // *** AuTHENTICATION METHODS,  API ***\n  //SIGN-UP\n  // closedList = \n\n\n}\n\nexport default Firebase; // starCountRef = firebase.database().ref('posts/' + postId + '/starCount');\n// addToList.on('value', function(snapshot) {\n//   console.log(snapshot.val())\n//  // updateStarCount(postElement, snapshot.val());\n// });\n// *****TO YOU WHEN WE CREATE TWO DBs, PRODUCTION AND TESTING*****\n// import app from 'firebase/app';\n// const prodConfig = {\n//   apiKey: process.env.REACT_APP_PROD_API_KEY,\n//   authDomain: process.env.REACT_APP_PROD_AUTH_DOMAIN,\n//   databaseURL: process.env.REACT_APP_PROD_DATABASE_URL,\n//   projectId: process.env.REACT_APP_PROD_PROJECT_ID,\n//   storageBucket: process.env.REACT_APP_PROD_STORAGE_BUCKET,\n//   messagingSenderId: process.env.REACT_APP_PROD_MESSAGING_SENDER_ID,\n// };\n// const devConfig = {\n//   apiKey: process.env.REACT_APP_DEV_API_KEY,\n//   authDomain: process.env.REACT_APP_DEV_AUTH_DOMAIN,\n//   databaseURL: process.env.REACT_APP_DEV_DATABASE_URL,\n//   projectId: process.env.REACT_APP_DEV_PROJECT_ID,\n//   storageBucket: process.env.REACT_APP_DEV_STORAGE_BUCKET,\n//   messagingSenderId: process.env.REACT_APP_DEV_MESSAGING_SENDER_ID,\n// };\n// const config =\n//   process.env.NODE_ENV === 'production' ? prodConfig : devConfig;\n// class Firebase {\n//   constructor() {\n//     app.initializeApp(config);\n//   }\n// }\n// export default Firebase;\n//=========================================\n//DOC FOR AUTH USING FIREBASE \n// https://www.robinwieruch.de/complete-firebase-authentication-react-tutorial#session-handling-with-higher-order-components","map":{"version":3,"sources":["/Users/joeyrodrigues/Desktop/Open-List/open-list/client/src/components/Firebase/firebaseConfig.js"],"names":["app","config","apiKey","process","env","REACT_APP_API_KEY","authDomain","REACT_APP_AUTH_DOMAIN","databaseURL","REACT_APP_DATABASE_URL","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APP_ID","measurementId","REACT_APP_MEASUREMENT_ID","Firebase","constructor","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","then","catch","error","console","log","doPasswordUpdate","currentUser","updatePassword","user","uid","db","ref","users","createNewList","addToList","listKey","initializeApp","database"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,UAAhB;AACA,OAAO,uBAAP;AACA,OAAO,uBAAP;AAEA,IAAIC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,iBADT;AAEXC,EAAAA,UAAU,EAAEH,OAAO,CAACC,GAAR,CAAYG,qBAFb;AAGXC,EAAAA,WAAW,EAAEL,OAAO,CAACC,GAAR,CAAYK,sBAHd;AAIXC,EAAAA,SAAS,EAAEP,OAAO,CAACC,GAAR,CAAYO,oBAJZ;AAKXC,EAAAA,aAAa,EAAET,OAAO,CAACC,GAAR,CAAYS,wBALhB;AAMXC,EAAAA,iBAAiB,EAAEX,OAAO,CAACC,GAAR,CAAYW,6BANpB;AAOXC,EAAAA,KAAK,EAAEb,OAAO,CAACC,GAAR,CAAYa,gBAPR;AAQXC,EAAAA,aAAa,EAAEf,OAAO,CAACC,GAAR,CAAYe;AARhB,CAAb;;AAWA,MAAMC,QAAN,CAAe;AAEbC,EAAAA,WAAW,GAAG;AAAA,SAadC,gCAbc,GAaqB,CAACC,KAAD,EAAQC,QAAR,KACjC,KAAKC,IAAL,CAAUC,8BAAV,CAAyCH,KAAzC,EAAgDC,QAAhD,CAdY;;AAAA,SAiBdG,4BAjBc,GAiBiB,CAACJ,KAAD,EAAQC,QAAR,KAC7B,KAAKC,IAAL,CAAUG,0BAAV,CAAqCL,KAArC,EAA4CC,QAA5C,CAlBY;;AAAA,SAqBZK,SArBY,GAqBA,MAAM,KAAKJ,IAAL,CAAUK,OAAV,EArBN;;AAAA,SAwBZC,eAxBY,GAwBMR,KAAK,IAAI,KAAKE,IAAL,CAAUO,sBAAV,CAAiCT,KAAjC,EAAwCU,IAAxC,CAA6C,YAAW,CACjF;AACD,KAF0B,EAExBC,KAFwB,CAElB,UAASC,KAAT,EAAgB;AACvB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAL0B,CAxBf;;AAAA,SAgCZG,gBAhCY,GAgCOd,QAAQ,IACzB,KAAKC,IAAL,CAAUc,WAAV,CAAsBC,cAAtB,CAAqChB,QAArC,CAjCU;;AAAA,SAqCZiB,IArCY,GAqCLC,GAAG,IAAI,KAAKC,EAAL,CAAQC,GAAR,CAAa,SAAQF,GAAI,EAAzB,CArCF;;AAAA,SAuCZG,KAvCY,GAuCJ,MAAM,KAAKF,EAAL,CAAQC,GAAR,CAAY,OAAZ,CAvCF;;AAAA,SAyCZE,aAzCY,GAyCIJ,GAAG,IAAI,KAAKC,EAAL,CAAQC,GAAR,CAAa,SAAQF,GAAI,WAAzB,CAzCX;;AAAA,SA2CZK,SA3CY,GA2CA,CAACL,GAAD,EAAMM,OAAN,KAAkB,KAAKL,EAAL,CAAQC,GAAR,CAAa,SAAQF,GAAI,aAAYM,OAAQ,UAA7C,CA3ClB;;AACZhD,IAAAA,GAAG,CAACiD,aAAJ,CAAkBhD,MAAlB;AAEA,SAAKwB,IAAL,GAAYzB,GAAG,CAACyB,IAAJ,EAAZ;AACA,SAAKkB,EAAL,GAAU3C,GAAG,CAACkD,QAAJ,EAAV;AACD,GAPY,CAUb;AAIQ;AAiCN;;;AA/CW;;AAmDf,eAAe9B,QAAf,C,CAGA;AACA;AACA;AACA;AACA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA","sourcesContent":["import app from 'firebase';\nimport 'firebase/empty-import';\nimport 'firebase/empty-import';\n\nvar config = {\n  apiKey: process.env.REACT_APP_API_KEY,\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\n  projectId: process.env.REACT_APP_PROJECT_ID,\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_APP_ID,\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID\n};\n\nclass Firebase {\n  \n  constructor() {\n    app.initializeApp(config);\n\n    this.auth = app.auth();\n    this.db = app.database();\n  }\n\n\n  // *** AuTHENTICATION METHODS,  API ***\n\n\n\n          //SIGN-UP\n  doCreateUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n          //LOGIN / SIGN-IN\n  doSignInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n          //SIGN-OUT\n    doSignOut = () => this.auth.signOut();\n\n          //RESET PSSWRD\n    doPasswordReset = email => this.auth.sendPasswordResetEmail(email).then(function() {\n      // Email sent.\n    }).catch(function(error) {\n      // An error happened.\n      console.log(error)\n    });\n\n          //UPDATE PSSWRD\n    doPasswordUpdate = password =>\n      this.auth.currentUser.updatePassword(password);\n\n        // *** User API  ***\n\n    user = uid => this.db.ref(`users/${uid}`);\n\n    users = () => this.db.ref('users');\n\n    createNewList = uid => this.db.ref(`users/${uid}/openList`);\n\n    addToList = (uid, listKey) => this.db.ref(`users/${uid}/openList/${listKey}/regUser`);\n\n    // closedList = \n  } \n\n\nexport default Firebase;\n\n\n// starCountRef = firebase.database().ref('posts/' + postId + '/starCount');\n// addToList.on('value', function(snapshot) {\n//   console.log(snapshot.val())\n//  // updateStarCount(postElement, snapshot.val());\n// });\n\n\n\n\n// *****TO YOU WHEN WE CREATE TWO DBs, PRODUCTION AND TESTING*****\n\n// import app from 'firebase/app';\n// const prodConfig = {\n//   apiKey: process.env.REACT_APP_PROD_API_KEY,\n//   authDomain: process.env.REACT_APP_PROD_AUTH_DOMAIN,\n//   databaseURL: process.env.REACT_APP_PROD_DATABASE_URL,\n//   projectId: process.env.REACT_APP_PROD_PROJECT_ID,\n//   storageBucket: process.env.REACT_APP_PROD_STORAGE_BUCKET,\n//   messagingSenderId: process.env.REACT_APP_PROD_MESSAGING_SENDER_ID,\n// };\n// const devConfig = {\n//   apiKey: process.env.REACT_APP_DEV_API_KEY,\n//   authDomain: process.env.REACT_APP_DEV_AUTH_DOMAIN,\n//   databaseURL: process.env.REACT_APP_DEV_DATABASE_URL,\n//   projectId: process.env.REACT_APP_DEV_PROJECT_ID,\n//   storageBucket: process.env.REACT_APP_DEV_STORAGE_BUCKET,\n//   messagingSenderId: process.env.REACT_APP_DEV_MESSAGING_SENDER_ID,\n// };\n// const config =\n//   process.env.NODE_ENV === 'production' ? prodConfig : devConfig;\n// class Firebase {\n//   constructor() {\n//     app.initializeApp(config);\n//   }\n// }\n// export default Firebase;\n\n//=========================================\n//DOC FOR AUTH USING FIREBASE \n// https://www.robinwieruch.de/complete-firebase-authentication-react-tutorial#session-handling-with-higher-order-components"]},"metadata":{},"sourceType":"module"}