{"ast":null,"code":"var _jsxFileName = \"/Users/joeyrodrigues/Desktop/Open-List/open-list/client/src/components/Home/index.js\";\n// you can use the higher-order component to protect your routes (e.g. /home and /account) \n// with authorization rules using the passed condition() function. To keep it simple, \n// the following two components are only protected with a broad \n// authorization rule that checks if the authUser is not null. \n// First, enhance the HomePage component with the higher-order \n// component and define the authorization condition for it:\nimport React, { Component } from 'react';\nimport { AuthUserContext, withAuthorization } from '../Session';\nimport ReactModal from 'react-modal';\nimport * as ROUTES from '../../routes/routes';\nimport Card from '../Card';\nimport axios from \"axios\";\n\nclass HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showModal: false,\n      streetAdd: '',\n      cityAdd: '',\n      stateAdd: '',\n      zipAdd: '',\n      listCreated: false,\n      error: ''\n    };\n    this.handleOpenModal = this.handleOpenModal.bind(this);\n    this.handleCloseModal = this.handleCloseModal.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCardClick = this.handleCardClick.bind(this);\n  }\n\n  componentWillMount() {\n    console.log('FETCHING');\n  }\n\n  handleOpenModal() {\n    this.setState({\n      showModal: true\n    });\n  }\n\n  handleCloseModal() {\n    this.setState({\n      showModal: false\n    });\n  } //MODAL PROP ADDRESS FORM\n\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleSubmit(event) {\n    if (this.state.streetAdd === '' && this.state.cityAdd === '' && this.state.streetAdd === '' && this.state.zipAdd === '') {\n      alert('Please Fill Out Form');\n    } else {\n      //close modal\n      this.handleCloseModal(); //this will tell us a list is created and in use, once realtor closes and saves current list listCreated: false.\n      // as long as its true realtor CAN NOT create another list (button will be hidden  )\n\n      this.setState({\n        listCreated: true\n      });\n    }\n\n    event.preventDefault();\n  } //CARD CLICKED ON\n\n\n  handleCardClick() {\n    //var ref = new Firebase(URL_TO_DATA);\n    // this new, empty ref only exists locally\n    //var newChildRef = ref.push();\n    // we can get its id using key()\n    //console.log('my new shiny id is '+newChildRef.key());\n    // now it is appended at the end of data at the server\n    //newChildRef.set({foo: 'bar'});\n    let createNewListKey = this.props.firebase.createNewList(this.context.uid).push();\n    let key = createNewListKey.key; //  let newKey = key.replace(\"-\", \"\");\n\n    createNewListKey.set({\n      street: this.state.streetAdd,\n      city: this.state.cityAdd,\n      state: this.state.stateAdd,\n      zip: this.state.zipAdd,\n      open: true\n    }).then(() => {\n      this.props.history.push({\n        pathname: ROUTES.REGISTER,\n        state: {\n          street: this.state.streetAdd,\n          city: this.state.cityAdd,\n          state: this.state.stateAdd,\n          zip: this.state.zipAdd,\n          listKey: key\n        }\n      });\n    }).catch(error => {\n      console.log('error', error);\n      this.setState({\n        error: error\n      });\n    }); // Will redirect user to home of register \n  }\n\n  render() {\n    const listCreated = this.state.listCreated;\n    let createdList;\n\n    if (listCreated) {\n      createdList = React.createElement(Card, {\n        handleCardClick: this.handleCardClick,\n        propertyState: this.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Home Page\"), React.createElement(\"button\", {\n      onClick: this.handleOpenModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Create New List\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Current Open List\"), createdList, React.createElement(ReactModal, {\n      isOpen: this.state.showModal,\n      contentLabel: \"Minimal Modal Example\",\n      style: customStyles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Property Address\", React.createElement(\"input\", {\n      name: \"streetAdd\",\n      type: \"text\",\n      value: this.state.streetAdd,\n      onChange: this.handleChange,\n      placeholder: \"Street Address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"cityAdd\",\n      type: \"text\",\n      value: this.state.cityAdd,\n      onChange: this.handleChange,\n      placeholder: \"City\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"stateAdd\",\n      type: \"text\",\n      value: this.state.stateAdd,\n      onChange: this.handleChange,\n      placeholder: \"State Initials\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"zipAdd\",\n      type: \"text\",\n      value: this.state.zipAdd,\n      onChange: this.handleChange,\n      placeholder: \"Zip Code\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      onClick: this.handleCloseModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, \"Close\")));\n  }\n\n}\n\n;\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n}; //THIS WILL LET US USE THE INFO OF THE CURRENT  LOGGED IN USER\n//WE GET THIS INFO PASSED FROM THE errorUSERCONTEXT.PROVIDER IN withauthentication.js\n//THIS WOULD BE LIKE THE AUTHCONTEXT.CONSUMER \n\nHomePage.contextType = AuthUserContext;\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(HomePage);","map":{"version":3,"sources":["/Users/joeyrodrigues/Desktop/Open-List/open-list/client/src/components/Home/index.js"],"names":["React","Component","AuthUserContext","withAuthorization","ReactModal","ROUTES","Card","axios","HomePage","constructor","props","state","showModal","streetAdd","cityAdd","stateAdd","zipAdd","listCreated","error","handleOpenModal","bind","handleCloseModal","handleChange","handleSubmit","handleCardClick","componentWillMount","console","log","setState","event","target","name","value","alert","preventDefault","createNewListKey","firebase","createNewList","context","uid","push","key","set","street","city","zip","open","then","history","pathname","REGISTER","listKey","catch","render","createdList","customStyles","content","top","left","right","bottom","marginRight","transform","contextType","condition","authUser"],"mappings":"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","sourcesContent":["// you can use the higher-order component to protect your routes (e.g. /home and /account) \n// with authorization rules using the passed condition() function. To keep it simple, \n// the following two components are only protected with a broad \n// authorization rule that checks if the authUser is not null. \n// First, enhance the HomePage component with the higher-order \n// component and define the authorization condition for it:\n\nimport React, { Component } from 'react';\n\nimport { AuthUserContext, withAuthorization } from '../Session';\n\nimport ReactModal from 'react-modal';\n\nimport * as ROUTES from '../../routes/routes';\n\nimport Card from '../Card'\n\nimport axios from \"axios\";\n\nclass HomePage extends Component{\n\n  constructor (props) {\n    super(props);\n    this.state = {\n      showModal: false,\n      streetAdd: '',\n      cityAdd: '',\n      stateAdd: '',\n      zipAdd: '',\n      listCreated: false,\n      error: ''\n    };\n    \n    this.handleOpenModal = this.handleOpenModal.bind(this);\n    this.handleCloseModal = this.handleCloseModal.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleCardClick = this.handleCardClick.bind(this);\n  }\n\n  componentWillMount(){\n    console.log('FETCHING')\n  }\n  \n  handleOpenModal () {\n    this.setState({ showModal: true });\n  }\n  \n  handleCloseModal () {\n    this.setState({ showModal: false });\n  }\n\n  //MODAL PROP ADDRESS FORM\n  handleChange(event) {\n    this.setState({ [event.target.name]: event.target.value});\n  }\n\n  handleSubmit(event) {\n    if(this.state.streetAdd === '' && \n    this.state.cityAdd === '' && \n    this.state.streetAdd === '' && \n    this.state.zipAdd === ''\n    ){\n      alert('Please Fill Out Form');\n    } else{\n    //close modal\n      this.handleCloseModal();\n\n    //this will tell us a list is created and in use, once realtor closes and saves current list listCreated: false.\n    // as long as its true realtor CAN NOT create another list (button will be hidden  )\n      this.setState({ listCreated: true })\n    }\n    event.preventDefault();\n  }\n\n  //CARD CLICKED ON\n  handleCardClick(){\n\n    //var ref = new Firebase(URL_TO_DATA);\n// this new, empty ref only exists locally\n//var newChildRef = ref.push();\n// we can get its id using key()\n//console.log('my new shiny id is '+newChildRef.key());\n// now it is appended at the end of data at the server\n//newChildRef.set({foo: 'bar'});\n\n  let createNewListKey = this.props.firebase.createNewList(this.context.uid).push();\n   let key = createNewListKey.key;\n  //  let newKey = key.replace(\"-\", \"\");\n\n\n  createNewListKey\n    .set({\n      street: this.state.streetAdd,\n      city: this.state.cityAdd,\n      state: this.state.stateAdd,\n      zip: this.state.zipAdd,\n      open: true\n      })\n      .then(() =>{\n\n        this.props.history.push({\n          pathname:ROUTES.REGISTER,\n          state:{\n            street: this.state.streetAdd,\n            city: this.state.cityAdd,\n            state: this.state.stateAdd,\n            zip: this.state.zipAdd,\n           listKey: key\n          }\n        });\n      })\n      .catch(error =>{\n        console.log('error', error)\n        this.setState({\n          error: error\n        })\n      })\n   // Will redirect user to home of register \n    \n    \n  }\n\n  render(){\n    const listCreated = this.state.listCreated;\n    let createdList;\n\n    if (listCreated) {\n      createdList = <Card handleCardClick={this.handleCardClick} propertyState={this.state} />\n    }\n\n    return(\n      <div>\n        <h1>Home Page</h1>\n\n          <button onClick={this.handleOpenModal}>Create New List</button>\n          {/* MODAL TRIGGER ^ */}\n\n          <h2>Current Open List</h2>\n          { createdList }\n\n          <ReactModal \n            isOpen={this.state.showModal}\n            contentLabel=\"Minimal Modal Example\"\n            style={customStyles}\n          >\n            {/* <button onClick={this.handleCloseModal}>Close Modal</button> */}\n            <form onSubmit={this.handleSubmit}>\n              <label>\n                Property Address\n                <input name='streetAdd' type=\"text\" value={this.state.streetAdd} onChange={this.handleChange} placeholder='Street Address' />\n                <input name='cityAdd' type=\"text\" value={this.state.cityAdd} onChange={this.handleChange} placeholder='City' />\n                <input name='stateAdd' type=\"text\" value={this.state.stateAdd} onChange={this.handleChange} placeholder='State Initials' />\n                <input name='zipAdd' type=\"text\" value={this.state.zipAdd} onChange={this.handleChange} placeholder='Zip Code' />\n              </label>\n              <input type=\"submit\" value=\"Submit\" />\n            </form>\n            <button onClick={this.handleCloseModal}>Close</button>\n          </ReactModal>\n          {/* END MODAL */}\n      </div>\n    )\n  }\n  \n};\n\nconst customStyles = {\n  content : {\n    top                   : '50%',\n    left                  : '50%',\n    right                 : 'auto',\n    bottom                : 'auto',\n    marginRight           : '-50%',\n    transform             : 'translate(-50%, -50%)'\n  }\n};\n\n\n//THIS WILL LET US USE THE INFO OF THE CURRENT  LOGGED IN USER\n//WE GET THIS INFO PASSED FROM THE errorUSERCONTEXT.PROVIDER IN withauthentication.js\n//THIS WOULD BE LIKE THE AUTHCONTEXT.CONSUMER \nHomePage.contextType =  AuthUserContext;\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(HomePage);"]},"metadata":{},"sourceType":"module"}