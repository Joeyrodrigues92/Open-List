{"ast":null,"code":"var _jsxFileName = \"/Users/joeyrodrigues/Desktop/Open-List/open-list/client/src/components/Register/index.js\";\nimport React, { Component } from \"react\";\nimport ReactModal from 'react-modal';\nimport { AuthUserContext, withAuthorization } from '../Session'; // import RegisterForm from './registerForm';\n// HOME SCREEN FROM OPEN HOUSE REGISTER FORM\n//WE NEED A BUTTON FOR ADMIN TO CLOSE LIST\n//SAVES DATA FROM REGISTER FORM\n//BUTTON TO PULL UP FORM\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showModal: false,\n      name: '',\n      email: '',\n      realtor: false,\n      usersOnList: [],\n      listKey: props.location.state.listKey\n    }; // this.handleCloseList = this.handleCloseList.bind(this);\n    // this.handleSetCloseModal =this.handleSetCloseModal.bind(this)\n\n    this.handleCloseOutList = this.handleCloseOutList.bind(this);\n    this.handleOpenModal = this.handleOpenModal.bind(this);\n    this.handleCloseModal = this.handleCloseModal.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleCheck = this.handleCheck.bind(this);\n    this.registerUserList = this.registerUserList.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.firebase.addToList(this.context.uid, this.state.listKey) //BIND IT TO HAVE this WORK PROPERLY \n    .on('value', snapshot => {\n      let regUserList = snapshot.val();\n      this.registerUserList(regUserList);\n    }, function (errorObject) {\n      console.log(\"The read failed: \" + errorObject.code);\n    });\n  }\n\n  registerUserList(list) {\n    if (list != null) {\n      console.log(\"List \", list);\n      const newList = Object.entries(list);\n      this.setState({\n        usersOnList: newList\n      });\n    }\n  }\n\n  handleOpenModal() {\n    this.setState({\n      showModal: true\n    }); //Form to register for open house will appear\n    //form will ask for -name -email -relator or not\n    // take in all register ppl, store i DB*\n  }\n\n  handleCloseModal() {\n    this.setState({\n      showModal: false,\n      name: '',\n      email: '',\n      realtor: false\n    }); //take us back to home \n    //   this.props.history.push({\n    //     pathname:ROUTES.HOME,\n    //     state:{\n    //       name: this.state.name,\n    //       email: this.state.email,\n    //       realtor: this.state.realtor\n    //       showModal: this.state.showModal,\n    //      }\n    //    });\n    // have to change the state of listCreated to false\n    //take in all registered ppl, store in DB*\n  } //handle input change in form\n\n\n  handleChange(event) {\n    // console.log('handlechange')\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  handleCheck() {\n    // console.log('handlecheck')\n    this.setState({\n      realtor: !this.state.realtor\n    });\n  } //handle user input from form modal.\n\n\n  handleSubmit(event) {\n    event.preventDefault(); //let dataArr = this.state.usersOnList;\n\n    if (this.state.name === '' || this.state.email === '') {\n      alert('Please Fill Out Form');\n    } else {\n      //let createNewReg = this.props.firebase.addToList(this.context.uid, this.state.listKey).push();\n      let createNewReg = this.props.firebase.addToList(this.context.uid, this.state.listKey);\n      let dataObj = {\n        name: this.state.name,\n        email: this.state.email,\n        realtor: this.state.realtor\n      };\n      createNewReg.push(dataObj);\n      this.handleCloseModal(); // this.setState({ showModal: false,\n      //                 name: '',\n      //                 email: '',\n      //                 realtor: false\n      // });\n    }\n  }\n\n  handleCloseOutList() {\n    console.log('list close');\n    console.log('FETCHING'); // axios.post(\"/email\", {test:'please work'})\n    // let testAccount = nodemailer.createTestAccount();\n    // let mailTransportAuth = nodemailer.createTransport({\n    //     service: 'gmail',\n    //     // port: 587,\n    //     // secure: false,\n    //    // requireTLS: true,\n    //     auth: {\n    //         user: 'joeyrodrigues92@gmail.com',  \n    //         pass: 'cityhallG7'\n    //     }\n    // });\n    // const mailOptions = {\n    //     from: '\"From me\" <noreply@firebase.com>',\n    //     to: \"joeyrodrigues92@gmail.com\",\n    //     subjet: \"testing\",\n    //     text: \"working\"\n    // };\n    // mailTransportAuth.sendMail(mailOptions, function(error, info){\n    //     if (error) {\n    //       console.log(error);\n    //     } else {\n    //       console.log('Email sent: ' + info.response);\n    //     }\n    // })\n  }\n\n  render() {\n    const _this$props$location$ = this.props.location.state,\n          street = _this$props$location$.street,\n          city = _this$props$location$.city,\n          state = _this$props$location$.state,\n          zip = _this$props$location$.zip;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, \"Welcome to this address\"), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, street, \" \", city, \", \", state, \" \", zip), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"click on register button to sign yourself in\"), React.createElement(\"button\", {\n      onClick: this.handleOpenModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, \"Register\"), React.createElement(\"button\", {\n      onClick: this.handleCloseOutList,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"Close Out List\"), React.createElement(ReactModal, {\n      isOpen: this.state.showModal,\n      contentLabel: \"Minimal Modal Example\",\n      style: customStyles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      name: \"name\",\n      type: \"text\",\n      value: this.state.name,\n      onChange: this.handleChange,\n      placeholder: \"Full Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"email\",\n      type: \"text\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      placeholder: \"Email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }), \"Realtor\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      onChange: this.handleCheck,\n      defaultChecked: this.state.realtor,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      onClick: this.handleCloseModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, \"Close\"))));\n  }\n\n}\n\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n}; //THIS WILL LET US USE THE INFO OF THE CURRENT  LOGGED IN USER\n//WE GET THIS INFO PASSED FROM THE errorUSERCONTEXT.PROVIDER IN witherrorentication.js\n//THIS WOULD BE LIKE THE AUTHCONTEXT.CONSUMER \n\nRegister.contextType = AuthUserContext;\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(Register);","map":{"version":3,"sources":["/Users/joeyrodrigues/Desktop/Open-List/open-list/client/src/components/Register/index.js"],"names":["React","Component","ReactModal","AuthUserContext","withAuthorization","Register","constructor","props","state","showModal","name","email","realtor","usersOnList","listKey","location","handleCloseOutList","bind","handleOpenModal","handleCloseModal","handleSubmit","handleChange","handleCheck","registerUserList","componentDidMount","firebase","addToList","context","uid","on","snapshot","regUserList","val","errorObject","console","log","code","list","newList","Object","entries","setState","event","target","value","preventDefault","alert","createNewReg","dataObj","push","render","street","city","zip","customStyles","content","top","left","right","bottom","marginRight","transform","contextType","condition","authUser"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReactModal from 'react-modal';\nimport { AuthUserContext, withAuthorization } from '../Session';\n\n// import RegisterForm from './registerForm';\n\n\n// HOME SCREEN FROM OPEN HOUSE REGISTER FORM\n//WE NEED A BUTTON FOR ADMIN TO CLOSE LIST\n    //SAVES DATA FROM REGISTER FORM\n//BUTTON TO PULL UP FORM\n\nclass Register extends Component{\n    constructor (props) {\n        super(props);\n        this.state = {\n            showModal: false,\n            name: '',\n            email: '',\n            realtor: false,\n            usersOnList: [],\n            listKey: props.location.state.listKey \n        }\n\n    // this.handleCloseList = this.handleCloseList.bind(this);\n   // this.handleSetCloseModal =this.handleSetCloseModal.bind(this)\n    this.handleCloseOutList = this.handleCloseOutList.bind(this);\n    this.handleOpenModal = this.handleOpenModal.bind(this);\n    this.handleCloseModal = this.handleCloseModal.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleCheck = this.handleCheck.bind(this);\n    this.registerUserList = this.registerUserList.bind(this)\n\n    }\n\n\n\n\n    componentDidMount(){\n        \n\n        this.props.firebase.addToList(this.context.uid, this.state.listKey)\n                //BIND IT TO HAVE this WORK PROPERLY \n            .on('value', (snapshot) => {\n\n                let regUserList = snapshot.val();\n \n                 this.registerUserList(regUserList)\n\n            }, function (errorObject) {\n                console.log(\"The read failed: \" + errorObject.code);\n            });        \n    }\n  \n\n\n    registerUserList(list){\n        \n        if ( list != null){\n            console.log(\"List \",list)\n            const newList = Object.entries(list)\n            this.setState({ usersOnList: newList })\n        }\n    }\n\n\n    handleOpenModal () {\n        this.setState({ showModal: true });\n        \n        //Form to register for open house will appear\n        //form will ask for -name -email -relator or not\n        // take in all register ppl, store i DB*\n    }\n\n    handleCloseModal () {\n\n        this.setState({ showModal: false,\n            name: '',\n            email: '',\n            realtor: false\n        });\n\n        //take us back to home \n\n    //   this.props.history.push({\n    //     pathname:ROUTES.HOME,\n    //     state:{\n    //       name: this.state.name,\n    //       email: this.state.email,\n    //       realtor: this.state.realtor\n    //       showModal: this.state.showModal,\n    //      }\n    //    });\n\n\n\n        // have to change the state of listCreated to false\n        //take in all registered ppl, store in DB*\n\n\n    }\n\n    //handle input change in form\n    handleChange(event) {\n       // console.log('handlechange')\n        this.setState({ [event.target.name]: event.target.value});\n      }\n\n\n    handleCheck() {\n       // console.log('handlecheck')\n        this.setState({realtor: !this.state.realtor});\n    }\n\n\n    //handle user input from form modal.\n\n    handleSubmit(event){\n        event.preventDefault();\n        //let dataArr = this.state.usersOnList;\n\n        if(this.state.name === '' ||\n        this.state.email === ''\n        ){\n            alert('Please Fill Out Form');\n        }else {\n\n            //let createNewReg = this.props.firebase.addToList(this.context.uid, this.state.listKey).push();\n            \n           let createNewReg = this.props.firebase.addToList(this.context.uid, this.state.listKey)\n\n            let dataObj = {\n                name: this.state.name,\n                email: this.state.email,\n                realtor: this.state.realtor\n            };\n\n            createNewReg\n            .push(dataObj)\n\n            this.handleCloseModal()\n            // this.setState({ showModal: false,\n            //                 name: '',\n            //                 email: '',\n            //                 realtor: false\n            // });\n        }\n    };\n\n    handleCloseOutList(){\n\n        console.log('list close')\n\n\n        console.log('FETCHING')\n\n       // axios.post(\"/email\", {test:'please work'})\n\n      // let testAccount = nodemailer.createTestAccount();\n        // let mailTransportAuth = nodemailer.createTransport({\n        //     service: 'gmail',\n        //     // port: 587,\n        //     // secure: false,\n        //    // requireTLS: true,\n        //     auth: {\n        //         user: 'joeyrodrigues92@gmail.com',  \n        //         pass: 'cityhallG7'\n        //     }\n        // });\n\n        // const mailOptions = {\n        //     from: '\"From me\" <noreply@firebase.com>',\n        //     to: \"joeyrodrigues92@gmail.com\",\n        //     subjet: \"testing\",\n        //     text: \"working\"\n        // };\n\n        // mailTransportAuth.sendMail(mailOptions, function(error, info){\n        //     if (error) {\n        //       console.log(error);\n        //     } else {\n        //       console.log('Email sent: ' + info.response);\n        //     }\n        // })\n       \n    }\n\n\n    render(){\n        const { street, city, state, zip} = this.props.location.state;\n\n        return (\n            <div>\n                <h1>Welcome to this address</h1>\n                <h3>{street} {city}, {state} {zip}</h3>\n                <p>click on register button to sign yourself in</p>\n\n                <button onClick={this.handleOpenModal}>Register</button>\n                \n                <button onClick={this.handleCloseOutList}>Close Out List</button>\n \n                <ReactModal \n                    isOpen={this.state.showModal}\n                    contentLabel=\"Minimal Modal Example\"\n                    style={customStyles}\n                >\n                    {/* <button onClick={this.handleCloseModal}>Close Modal</button> */}\n                    <form onSubmit={this.handleSubmit}>\n                    <label>\n                        <input name='name' type=\"text\" value={this.state.name} onChange={this.handleChange} placeholder='Full Name' />\n                        <input name='email' type=\"text\" value={this.state.email}  onChange={this.handleChange} placeholder='Email' />\n                        Realtor\n                        <input type=\"checkbox\" onChange={this.handleCheck} defaultChecked={this.state.realtor}/>\n                    </label>\n                    <input type=\"submit\" value=\"Submit\" />\n                    <button onClick={this.handleCloseModal}>Close</button>\n                    </form>\n                    {/* <button onClick={this.handleCloseModal}>Close</button> */}\n                </ReactModal>\n            </div>\n        );\n    }\n}\n\n\nconst customStyles = {\n    content : {\n      top                   : '50%',\n      left                  : '50%',\n      right                 : 'auto',\n      bottom                : 'auto',\n      marginRight           : '-50%',\n      transform             : 'translate(-50%, -50%)'\n    }\n  };\n\n  //THIS WILL LET US USE THE INFO OF THE CURRENT  LOGGED IN USER\n//WE GET THIS INFO PASSED FROM THE errorUSERCONTEXT.PROVIDER IN witherrorentication.js\n//THIS WOULD BE LIKE THE AUTHCONTEXT.CONSUMER \nRegister.contextType =  AuthUserContext;\n\nconst condition = authUser => !!authUser;\n\nexport default withAuthorization(condition)(Register);\n\n\n\n"]},"metadata":{},"sourceType":"module"}